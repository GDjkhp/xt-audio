/**
 * @file XtAudio.h
 * @brief Helper functions and bootstrapping.
 */

/**
 * @fn XtVersion XtAudioGetVersion(void)
 * @brief Get XT-Audio library version
 * @return XT-Audio library version
 *
 * This function may be called from any thread.
 */

/**
 * @fn XtErrorInfo XtAudioGetErrorInfo(XtError error)
 * @brief Translate opaque error code to error details
 * @return detailed error information
 * @param error the error code (must not be 0)
 *
 * This function may be called from any thread.
 */

/**
 * @fn XtAttributes XtAudioGetSampleAttributes(XtSample sample)
 * @brief Get sample attributes for a specific sample type.
 * @return resulting sample attributes.
 * @param sample the sample type.
 *
 * This function may be called from any thread.
 */

/**
 * @fn XtPlatform* XtAudioInit(char const* id, void* window, XtOnError onError)
 * @brief Initialize the XT-Audio library.
 * @return platform-specific library handle. Use XtPlatformDestroy to cleanup.
 * @param id the application id. Used to identify against sound servers such as JACK and PulseAudio. When NULL, "XT-Audio" is used.
 * @param window application main window handle. ASIO uses this to show modal control panels. DSound uses this for SetCooperativeLevel. When NULL, a dummy message window is used.
 * @param onError application-defined error logging callback. When NULL, no logging is performed.
 *
 * This function may be called from any thread. The thread on which it is called becomes
 * the main thread, many other functions may only be called from the main thread. On Windows,
 * COM is initialized in STA mode by this call.
 *
 * @see XtPlatformDestroy
 */